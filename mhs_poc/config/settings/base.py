"""
Django settings for {{ cookiecutter.project_name }} project.

Generated by 'django-admin startproject' using Django 3.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

import os
import sys

from encrypted_secrets import get_secret

# Resolve BASE_DIR
BASE_DIR = os.path.dirname(
    os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
)
sys.path.insert(0, os.path.join(BASE_DIR, "apps"))

# initialise a temporary secret key when setting up the project for the first time
SECRET_KEY = get_secret("SECRET_KEY", default="temp")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = get_secret("DEBUG")
INTERNAL_IPS = "127.0.0.1"

# Import dev or prod settings based on environment
if get_secret("DEBUG") == "True":  # in dev, run dev settings
    from ..settings.dev import *  # noqa: F401
else:  # in prod, run prod settings
    from ..settings.prod import *  # noqa: F401

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.sites",
    "encrypted_secrets",
    "microsoft_auth",
    "admin_honeypot",
    "axes",
    "mhs_poc.apps.styles",
    "mhs_poc.apps.auth_azure_ad",
    "mhs_poc.apps.elasticsearch_service",
    "mhs_poc.apps.base",
]

SITE_ID = 1

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "mhs_poc.apps.auth_azure_ad.middleware.BlockExpiredAccounts",
    "mhs_poc.apps.auth_azure_ad.middleware.PreventConcurrentLogins",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "csp.middleware.CSPMiddleware",
    "axes.middleware.AxesMiddleware",
]

ROOT_URLCONF = "mhs_poc.config.urls"

# This is the real Admin page URL. The /admin is a fake page which serves as a honeypot
# Reference: https://django-admin-honeypot.readthedocs.io/en/latest/
ADMIN_URL = "secret_base_of_coe"
ADMIN_HONEYPOT_EMAIL_ADMINS = (
    False  # Set this to true to notify ADMINS on attempted logins in honeypot
)

TEMPLATES_DIR = os.path.join(BASE_DIR, "templates")
TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "csp.context_processors.nonce",
                "microsoft_auth.context_processors.microsoft",
            ],
        },
    },
]

WSGI_APPLICATION = "mhs_poc.config.wsgi.application"


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR + "/" + "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Azure AD setup
AUTHENTICATION_BACKENDS = (
    "axes.backends.AxesBackend",
    "microsoft_auth.backends.MicrosoftAuthenticationBackend",
    "django.contrib.auth.backends.ModelBackend",
)

# MICROSOFT AD AUTH SETTINGS
MICROSOFT_AUTH_CLIENT_ID = get_secret("MICROSOFT_AUTH_CLIENT_ID")
MICROSOFT_AUTH_CLIENT_SECRET = get_secret("MICROSOFT_AUTH_CLIENT_SECRET")
MICROSOFT_AUTH_TENANT_ID = get_secret("MICROSOFT_AUTH_TENANT_ID")

MICROSOFT_AUTH_EXTRA_SCOPES = "User.Read"
MICROSOFT_AUTH_EXTRA_SCOPES = "User.ReadBasic.All"

# Refer: https://stackoverflow.com/a/60037360/5384866
MICROSOFT_AUTH_AUTHENTICATE_HOOK = (
    "mhs_poc.apps.auth_azure_ad.aad.store_token"
)

# Overide the user authentication model
AUTH_USER_MODEL = "auth_azure_ad.User"

# Configure django to redirect users to the right URL for login
# LOGIN_URL = "django_auth_adfs:login"
LOGIN_URL = "/login"
LOGIN_REDIRECT_URL = "/"
LOGOUT_REDIRECT_URL = "/login"

# Expires session when user closes the browser
SESSION_EXPIRE_AT_BROWSER_CLOSE = True

# Expires session after a period of inactivity
SESSION_COOKIE_AGE = 1800  # timeout in 30 mins
SESSION_SAVE_EVERY_REQUEST = True

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "Asia/Kuala_Lumpur"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = "/static/"
STATICFILES_DIRS = [
    "/apps/**/static",
]

# Content Security Policy
# See: https://django-csp.readthedocs.io/en/latest/configuration.html
CSP_EXCLUDE_URL_PREFIXES = ("/secret_base_of_coe", "/microsoft")
CSP_SCRIPT_SRC = ("'unsafe-eval'", "'self'")
CSP_INCLUDE_NONCE_IN = ["script-src"]
